{"version":3,"file":"RemoteClient.min.js","sources":["../src/parse.js","../src/AbstractClient.js","../src/terms.js","../src/RemoteClient.js"],"sourcesContent":["'use strict';\n\nconst ohm = require('ohm-js')\n\nconst grammar = ohm.grammar(`\n  G {\n\n    factOrPattern\n      = term*\n\n    term\n      = id\n      | word\n      | value\n      | variable\n      | wildcard\n      | hole\n\n    id\n      = \"#\" alnum*\n\n    value\n      = keyword<\"true\">   -- true\n      | keyword<\"false\">  -- false\n      | keyword<\"null\">   -- null\n      | number\n      | string\n\n    variable\n      = \"$\" alnum+\n\n    wildcard\n      = \"$\"\n\n    hole\n      = \"_\"\n\n    word\n      = (~special any)+  -- nonspace\n      | space+           -- space\n\n    keyword<k>\n      = k ~alnum\n\n    number\n      = float (\"e\" float)?\n\n    float\n      = integer (\".\" digit+)?\n\n    integer\n      = (\"+\" | \"-\")? digit+\n\n    string\n      = \"\\\\\"\" (~\"\\\\\"\" ~\"\\\\n\" any)* \"\\\\\"\"\n\n    special\n      = id | value | variable | wildcard | hole | space\n\n  }\n`);\n\nconst semantics = grammar.createSemantics().addOperation('parse', {\n  factOrPattern(terms) {\n    return terms.parse();\n  },\n  id(_, cs) {\n    return {id: cs.sourceString};\n  },\n  value_true(_) {\n    return {value: true};\n  },\n  value_false(_) {\n    return {value: false};\n  },\n  value_null(_) {\n    return {value: null};\n  },\n  variable(_, cs) {\n    return {variable: cs.sourceString};\n  },\n  wildcard(_) {\n    return {wildcard: true};\n  },\n  hole(_) {\n    return {hole: true};\n  },\n  word_nonspace(_) {\n    return {word: this.sourceString};\n  },\n  word_space(_) {\n    return {word: ' '};\n  },\n  number(_1, _2, _3) {\n    return {value: parseFloat(this.sourceString)};\n  },\n  string(_oq, cs, _cq) {\n    const chars = [];\n    let idx = 0;\n    cs = cs.parse();\n    while (idx < cs.length) {\n      let c = cs[idx++];\n      if (c === '\\\\' && idx < cs.length) {\n        c = cs[idx++];\n        switch (c) {\n          case 'n': c = '\\n'; break;\n          case 't': c = '\\t'; break;\n          default: idx--;\n        }\n      }\n      chars.push(c);\n    }\n    return {value: chars.join('')};\n  },\n  _terminal() {\n    return this.sourceString;\n  }\n});\n\nexport default function parse(str, optRule) {\n  const rule = optRule || 'factOrPattern';\n  const matchResult = grammar.match(str.trim(), rule);\n  if (matchResult.succeeded()) {\n    return semantics(matchResult).parse();\n  } else {\n    throw new Error(`invalid ${rule}: ${str}`);\n  }\n};\n","'use strict';\n\nimport parse from './parse'\n\nconst MAX_PARSE_CACHE_SIZE = 1000;\n\nexport default class AbstractClient {\n  constructor(id) {\n    this._id = id;\n    this._parseCache = new Map();\n    this._asserts = [];\n    this._retracts = [];\n  }\n\n  assert(factString, ...fillerValues) {\n    const fact = this._toJSONFactOrPattern(factString, ...fillerValues);\n    this._asserts.push(fact);\n  }\n\n  retract(patternString, ...fillerValues) {\n    const pattern = this._toJSONFactOrPattern(patternString, ...fillerValues);\n    this._retracts.push(pattern);\n  }\n\n  async flushChanges() {\n    throw new Error('subclass responsibility');\n  }\n\n  async immediatelyAssert(factString, ...fillerValues) {\n    this.assert(factString, ...fillerValues);\n    await this.flushChanges();\n  }\n\n  async immediatelyRetract(patternString, ...fillerValues) {\n    this.assert(patternString, ...fillerValues);\n    await this.flushChanges();\n  }\n\n  async immediatelyRetractEverythingAbout(name) {\n    throw new Error('subclass responsibility');\n  }\n\n  async immediatelyRetractEverythingAssertedByMe() {\n    throw new Error('subclass responsibility');\n  }\n\n  async getAllFacts() {\n    throw new Error('subclass responsibility');\n  }\n\n  _toJSONFactOrPattern(factOrPatternString, ...fillerValues) {\n    if (arguments.length === 0) {\n      throw new Error('not enough arguments!');\n    }\n    if (typeof factOrPatternString !== 'string') {\n      throw new Error('factOrPatternString must be a string!');\n    }\n    let terms = this._parse(factOrPatternString);\n    if (fillerValues.length > 0) {\n      terms = terms.slice();\n    }\n    for (let idx = 0; idx < terms.length; idx++) {\n      const term = terms[idx];\n      if (term.hasOwnProperty('hole')) {\n        if (fillerValues.length === 0) {\n          throw new Error('not enough filler values!');\n        }\n        terms[idx] = this._toJSONTerm(fillerValues.shift());\n      }\n    }\n    if (fillerValues.length > 0) {\n      throw new Error('too many filler values!');\n    }\n    return terms;\n  }\n\n  _toJSONTerm(value) {\n    return {value: value};\n  }\n\n  _parse(factOrPatternString) {\n    if (this._parseCache.has(factOrPatternString)) {\n      return this._parseCache.get(factOrPatternString);\n    } else {\n      this._clearParseCacheIfTooBig();\n      const terms = parse(factOrPatternString);\n      this._parseCache.set(factOrPatternString, terms);\n      return terms;\n    }\n  }\n\n  _clearParseCacheIfTooBig() {\n    if (this._parseCache.size > MAX_PARSE_CACHE_SIZE) {\n      this.clearParseCache();\n    }\n  }\n\n  clearParseCache() {\n    this._parseCache.clear();\n  }\n}\n","'use strict';\n\nclass Term {\n  toString() {\n    throw new Error('subclass responsibility');\n  }\n\n  toJSON() {\n    throw new Error('subclass responsibility');\n  }\n\n  toRawValue() {\n    throw new Error('subclass responsibility');\n  }\n\n  match(that, env) {\n    throw new Error('subclass responsibility');\n  }\n}\n\nTerm.fromJSON = json => {\n  if (json.hasOwnProperty('id')) {\n    return new Id(json.id);\n  } else if (json.hasOwnProperty('word')) {\n    return new Word(json.word);\n  } else if (json.hasOwnProperty('value')) {\n    return new Value(json.value);\n  } else if (json.hasOwnProperty('blobRef')) {\n    return new BlobRef(json.blobRef);\n  } else if (json.hasOwnProperty('variable')) {\n    return new Variable(json.variable);\n  } else if (json.hasOwnProperty('wildcard')) {\n    return new Wildcard();\n  } else if (json.hasOwnProperty('hole')) {\n    return new Hole();\n  } else {\n    throw new Error('unrecognized JSON term: ' + JSON.stringify(json));\n  }\n};\n\nclass Id extends Term {\n  constructor(name) {\n    super();\n    this.name = name;\n  }\n\n  toString() {\n    return '#' + this.name;\n  }\n\n  toJSON() {\n    return {id: this.name};\n  }\n\n  toRawValue() {\n    return this;\n  }\n\n  match(that, env) {\n    return that instanceof Id && this.name === that.name ?\n        env :\n        null;\n  }\n}\n\nclass Word extends Term {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n\n  toString() {\n    return this.value;\n  }\n\n  toJSON() {\n    return {word: this.value};\n  }\n\n  toRawValue() {\n    return this;\n  }\n\n  match(that, env) {\n    return that instanceof Word && this.value === that.value ?\n        env :\n        null;\n  }\n}\n\nclass Value extends Term {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n\n  toString() {\n    return JSON.stringify(this.value);\n  }\n\n  toJSON() {\n    return {value: this.value};\n  }\n\n  toRawValue() {\n    return this.value;\n  }\n\n  match(that, env) {\n    return that instanceof Value && this.value === that.value ?\n        env :\n        null;\n  }\n}\n\nclass BlobRef extends Term {\n  constructor(id) {\n    super();\n    this.id = id;\n  }\n\n  toString() {\n    return '@' + this.id;\n  }\n\n  toJSON() {\n    return {blobRef: this.id};\n  }\n\n  toRawValue() {\n    return this;\n  }\n\n  match(that, env) {\n    return that instanceof BlobRef && this.id === that.id ?\n        env :\n        null;\n  }\n}\n\nclass Variable extends Term {\n  constructor(name) {\n    super();\n    this.name = name;\n  }\n\n  toString() {\n    return '$' + this.name;\n  }\n\n  toJSON() {\n    return {variable: this.name};\n  }\n\n  toRawValue() {\n    throw new Error('Variable\\'s toRawValue() should never be called!');\n  }\n\n  match(that, env) {\n    if (env[this.name] === undefined) {\n      env[this.name] = that;\n      return env;\n    } else {\n      return env[this.name].match(that, env);\n    }\n  }\n}\n\nclass Wildcard extends Term {\n  constructor() {\n    super();\n    // no-op\n  }\n\n  toString() {\n    return '$';\n  }\n\n  toJSON() {\n    return {wildcard: true};\n  }\n\n  toRawValue() {\n    throw new Error('Wildcard\\'s toRawValue() should never be called!');\n  }\n\n  match(that, env) {\n    return env;\n  }\n}\n\nclass Hole extends Term {\n  constructor() {\n    super();\n    // no-op\n  }\n\n  toString() {\n    return '_';\n  }\n\n  toJSON() {\n    return {hole: true};\n  }\n\n  toRawValue() {\n    throw new Error('Hole\\'s toRawValue() should never be called!');\n  }\n\n  match(that, env) {\n    throw new Error('Hole\\'s match() should never be called!');\n  }\n}\n\nexport {\n  Term,\n  Id,\n  Word,\n  Value,\n  BlobRef,\n  Variable,\n  Wildcard,\n  Hole\n}\n","'use strict';\n\nimport AbstractClient from './AbstractClient'\nimport {Term} from './terms'\nimport parse from './parse'\n\n// If fetch is not declared, load it from the node-fetch module.\n// (This makes it possible to run RemoteClient in the browser and in node-js.)\nconst fetch = (() => {\n  try {\n    return fetch;\n  } catch (e) {\n    return require('node-fetch');\n  }\n})();\n\nexport default class RemoteClient extends AbstractClient {\n  constructor(address, port, id) {\n    super(id);\n    this._address = address;\n    this._port = port;\n  }\n\n  select(...patternStrings) {\n    const patterns = patternStrings.map(p =>\n      p instanceof Array ?\n          this._toJSONFactOrPattern(...p) :\n          this._toJSONFactOrPattern(p));\n    const solutions = async () => {\n      const params = `query=${JSON.stringify(patterns)}`;\n      const response = await fetch(`http://${this._address}:${this._port}/facts?${params}`);\n      return await response.json();\n    };\n    const results = {\n      async do(callbackFn) {\n        for (let solution of await solutions()) {\n          for (let name in solution) {\n            // force serialization and deserialization to simulate going over the network\n            const json = JSON.parse(JSON.stringify(solution[name]));\n            solution[name] = Term.fromJSON(json).toRawValue();\n          }\n          await callbackFn(solution);\n        }\n        return results;\n      },\n      async count() {\n        return (await solutions()).length;\n      },\n      async isEmpty() {\n        return (await solutions()).length === 0;\n      },\n      async isNotEmpty() {\n        return (await solutions()).length > 0;\n      }\n    };\n    return results;\n  }\n\n  async flushChanges() {\n    const retractions = this._retracts;\n    const assertions = this._asserts;\n    this._retracts = [];\n    this._asserts = [];\n    const params =\n        'clientId=' + this._id + '&' +\n        'retractions=' + JSON.stringify(retractions) + '&' +\n        'assertions=' + JSON.stringify(assertions);\n    const response = await fetch(\n        `http://${this._address}:${this._port}/facts?${params}`,\n        {method: 'PUT'});\n    return await response.json();\n  }\n\n  async immediatelyRetractEverythingAbout(name) {\n    const response = await fetch(\n        `http://${this._address}:${this._port}/facts?clientId=${this._id}&name=${name}`,\n        {method: 'DELETE'});\n    return await response.json();\n  }\n\n  async immediatelyRetractEverythingAssertedByMe() {\n    const response = await fetch(\n        `http://${this._address}:${this._port}/facts?clientId=${this._id}`,\n        {method: 'DELETE'});\n    return await response.json();\n  }\n\n  async getAllFacts() {\n    const response = await fetch(`http://${this._address}:${this._port}/facts`);\n    return await response.json();\n  }\n\n  toString() {\n    return `[RemoteClient ${this._address}:${this._port}, ${this._id}]`;\n  }\n}\n\nmodule.exports = RemoteClient;\n"],"names":["grammar","require","semantics","createSemantics","addOperation","factOrPattern","terms","parse","id","_","cs","sourceString","value_true","value","value_false","value_null","variable","wildcard","hole","[object Object]","word","this","word_space","_1","_2","_3","parseFloat","_oq","_cq","chars","idx","length","c","push","join","MAX_PARSE_CACHE_SIZE","AbstractClient","_id","_parseCache","Map","_asserts","_retracts","factString","fillerValues","fact","_toJSONFactOrPattern","patternString","pattern","Error","assert","flushChanges","name","factOrPatternString","arguments","_parse","slice","hasOwnProperty","_toJSONTerm","shift","has","get","_clearParseCacheIfTooBig","str","optRule","rule","matchResult","match","trim","succeeded","set","size","clearParseCache","clear","Term","that","env","fromJSON","json","Id","Word","Value","BlobRef","blobRef","super","undefined","JSON","stringify","fetch","e","RemoteClient","address","port","_address","_port","patternStrings","patterns","map","p","Array","solutions","async","params","response","results","callbackFn","solution","toRawValue","count","isEmpty","isNotEmpty","retractions","assertions","method","module","exports"],"mappings":"wLAEA,MAEMA,EAFMC,QAAQ,UAEAD,QAAQ,yyBA0DtBE,EAAYF,EAAQG,kBAAkBC,aAAa,SACvDC,cAAcC,GACLA,EAAMC,QAEfC,GAAE,CAACC,EAAGC,MACIF,GAAIE,EAAGC,eAEjBC,WAAWH,KACDI,OAAO,IAEjBC,YAAYL,KACFI,OAAO,IAEjBE,WAAWN,KACDI,MAAO,OAEjBG,SAAQ,CAACP,EAAGC,MACFM,SAAUN,EAAGC,eAEvBM,SAASR,KACCQ,UAAU,IAEpBC,KAAKT,KACKS,MAAM,IAEhBC,cAAcV,GACZ,OAAQW,KAAMC,KAAKV,eAErBW,WAAWb,KACDW,KAAM,MAEhBD,OAAOI,EAAIC,EAAIC,GACb,OAAQZ,MAAOa,WAAWL,KAAKV,gBAEjCQ,OAAOQ,EAAKjB,EAAIkB,GACd,MAAMC,KACN,IAAIC,EAAM,EAEV,IADApB,EAAKA,EAAGH,QACDuB,EAAMpB,EAAGqB,QAAQ,CACtB,IAAIC,EAAItB,EAAGoB,KACX,GAAU,OAANE,GAAcF,EAAMpB,EAAGqB,OAEzB,OADAC,EAAItB,EAAGoB,MAEL,IAAK,IAAKE,EAAI,KAAM,MACpB,IAAK,IAAKA,EAAI,KAAM,MACpB,QAASF,IAGbD,EAAMI,KAAKD,GAEb,OAAQnB,MAAOgB,EAAMK,KAAK,MAE5Bf,YACE,OAAOE,KAAKV,gBC/GhB,MAAMwB,EAAuB,UAERC,EACnBjB,YAAYX,GACVa,KAAKgB,IAAM7B,EACXa,KAAKiB,YAAc,IAAIC,IACvBlB,KAAKmB,YACLnB,KAAKoB,aAGPtB,OAAOuB,KAAeC,GACpB,MAAMC,EAAOvB,KAAKwB,qBAAqBH,KAAeC,GACtDtB,KAAKmB,SAASP,KAAKW,GAGrBzB,QAAQ2B,KAAkBH,GACxB,MAAMI,EAAU1B,KAAKwB,qBAAqBC,KAAkBH,GAC5DtB,KAAKoB,UAAUR,KAAKc,GAGtB5B,qBACE,MAAM,IAAI6B,MAAM,2BAGlB7B,wBAAwBuB,KAAeC,GACrCtB,KAAK4B,OAAOP,KAAeC,SACrBtB,KAAK6B,eAGb/B,yBAAyB2B,KAAkBH,GACzCtB,KAAK4B,OAAOH,KAAkBH,SACxBtB,KAAK6B,eAGb/B,wCAAwCgC,GACtC,MAAM,IAAIH,MAAM,2BAGlB7B,iDACE,MAAM,IAAI6B,MAAM,2BAGlB7B,oBACE,MAAM,IAAI6B,MAAM,2BAGlB7B,qBAAqBiC,KAAwBT,GAC3C,GAAyB,IAArBU,UAAUtB,OACZ,MAAM,IAAIiB,MAAM,yBAElB,GAAmC,iBAAxBI,EACT,MAAM,IAAIJ,MAAM,yCAElB,IAAI1C,EAAQe,KAAKiC,OAAOF,GACpBT,EAAaZ,OAAS,IACxBzB,EAAQA,EAAMiD,SAEhB,IAAK,IAAIzB,EAAM,EAAGA,EAAMxB,EAAMyB,OAAQD,IAAO,CAE3C,GADaxB,EAAMwB,GACV0B,eAAe,QAAS,CAC/B,GAA4B,IAAxBb,EAAaZ,OACf,MAAM,IAAIiB,MAAM,6BAElB1C,EAAMwB,GAAOT,KAAKoC,YAAYd,EAAae,UAG/C,GAAIf,EAAaZ,OAAS,EACxB,MAAM,IAAIiB,MAAM,2BAElB,OAAO1C,EAGTa,YAAYN,GACV,OAAQA,MAAOA,GAGjBM,OAAOiC,GACL,GAAI/B,KAAKiB,YAAYqB,IAAIP,GACvB,OAAO/B,KAAKiB,YAAYsB,IAAIR,GACvB,CACL/B,KAAKwC,2BACL,MAAMvD,EDkCZ,SAA8BwD,EAAKC,GACjC,MAAMC,EAAOD,GAAW,gBAClBE,EAAcjE,EAAQkE,MAAMJ,EAAIK,OAAQH,GAC9C,GAAIC,EAAYG,YACd,OAAOlE,EAAU+D,GAAa1D,QAE9B,MAAM,IAAIyC,iBAAiBgB,MAASF,KCxCpBvD,CAAM6C,GAEpB,OADA/B,KAAKiB,YAAY+B,IAAIjB,EAAqB9C,GACnCA,GAIXa,2BACME,KAAKiB,YAAYgC,KAAOnC,GAC1Bd,KAAKkD,kBAITpD,kBACEE,KAAKiB,YAAYkC,eChGfC,EACJtD,WACE,MAAM,IAAI6B,MAAM,2BAGlB7B,SACE,MAAM,IAAI6B,MAAM,2BAGlB7B,aACE,MAAM,IAAI6B,MAAM,2BAGlB7B,MAAMuD,EAAMC,GACV,MAAM,IAAI3B,MAAM,4BAIpByB,EAAKG,SAAWC,CAAAA,IACd,GAAIA,EAAKrB,eAAe,MACtB,OAAO,IAAIsB,EAAGD,EAAKrE,IACd,GAAIqE,EAAKrB,eAAe,QAC7B,OAAO,IAAIuB,EAAKF,EAAKzD,MAChB,GAAIyD,EAAKrB,eAAe,SAC7B,OAAO,IAAIwB,EAAMH,EAAKhE,OACjB,GAAIgE,EAAKrB,eAAe,WAC7B,OAAO,IAAIyB,EAAQJ,EAAKK,SACnB,GAAIL,EAAKrB,eAAe,YAC7B,OAAO,kBA8GYiB,EACrBtD,YAAYgC,GACVgC,QACA9D,KAAK8B,KAAOA,EAGdhC,WACE,MAAO,IAAME,KAAK8B,KAGpBhC,SACE,OAAQH,SAAUK,KAAK8B,MAGzBhC,aACE,MAAM,IAAI6B,MAAM,mDAGlB7B,MAAMuD,EAAMC,GACV,YAAuBS,IAAnBT,EAAItD,KAAK8B,OACXwB,EAAItD,KAAK8B,MAAQuB,EACVC,GAEAA,EAAItD,KAAK8B,MAAMe,MAAMQ,EAAMC,KArIhBE,EAAK7D,UACpB,GAAI6D,EAAKrB,eAAe,YAC7B,OAAO,kBAwIYiB,EACrBtD,cACEgE,QAIFhE,WACE,MAAO,IAGTA,SACE,OAAQF,UAAU,GAGpBE,aACE,MAAM,IAAI6B,MAAM,mDAGlB7B,MAAMuD,EAAMC,GACV,OAAOA,IA1JF,GAAIE,EAAKrB,eAAe,QAC7B,OAAO,kBA6JQiB,EACjBtD,cACEgE,QAIFhE,WACE,MAAO,IAGTA,SACE,OAAQD,MAAM,GAGhBC,aACE,MAAM,IAAI6B,MAAM,+CAGlB7B,MAAMuD,EAAMC,GACV,MAAM,IAAI3B,MAAM,4CA9KhB,MAAM,IAAIA,MAAM,2BAA6BqC,KAAKC,UAAUT,YAI1DC,UAAWL,EACftD,YAAYgC,GACVgC,QACA9D,KAAK8B,KAAOA,EAGdhC,WACE,MAAO,IAAME,KAAK8B,KAGpBhC,SACE,OAAQX,GAAIa,KAAK8B,MAGnBhC,aACE,OAAOE,KAGTF,MAAMuD,EAAMC,GACV,OAAOD,aAAgBI,GAAMzD,KAAK8B,OAASuB,EAAKvB,KAC5CwB,EACA,YAIFI,UAAaN,EACjBtD,YAAYN,GACVsE,QACA9D,KAAKR,MAAQA,EAGfM,WACE,OAAOE,KAAKR,MAGdM,SACE,OAAQC,KAAMC,KAAKR,OAGrBM,aACE,OAAOE,KAGTF,MAAMuD,EAAMC,GACV,OAAOD,aAAgBK,GAAQ1D,KAAKR,QAAU6D,EAAK7D,MAC/C8D,EACA,YAIFK,UAAcP,EAClBtD,YAAYN,GACVsE,QACA9D,KAAKR,MAAQA,EAGfM,WACE,OAAOkE,KAAKC,UAAUjE,KAAKR,OAG7BM,SACE,OAAQN,MAAOQ,KAAKR,OAGtBM,aACE,OAAOE,KAAKR,MAGdM,MAAMuD,EAAMC,GACV,OAAOD,aAAgBM,GAAS3D,KAAKR,QAAU6D,EAAK7D,MAChD8D,EACA,YAIFM,UAAgBR,EACpBtD,YAAYX,GACV2E,QACA9D,KAAKb,GAAKA,EAGZW,WACE,MAAO,IAAME,KAAKb,GAGpBW,SACE,OAAQ+D,QAAS7D,KAAKb,IAGxBW,aACE,OAAOE,KAGTF,MAAMuD,EAAMC,GACV,OAAOD,aAAgBO,GAAW5D,KAAKb,KAAOkE,EAAKlE,GAC/CmE,EACA,MChIR,MAAMY,EAAQ,MACZ,IACE,OAAOA,EACP,MAAOC,GACP,OAAOvF,QAAQ,gBAJL,SAQOwF,UAAqBrD,EACxCjB,YAAYuE,EAASC,EAAMnF,GACzB2E,MAAM3E,GACNa,KAAKuE,SAAWF,EAChBrE,KAAKwE,MAAQF,EAGfxE,UAAU2E,GACR,MAAMC,EAAWD,EAAeE,IAAIC,GAClCA,aAAaC,MACT7E,KAAKwB,wBAAwBoD,GAC7B5E,KAAKwB,qBAAqBoD,IAC1BE,EAAYC,UAChB,MAAMC,WAAkBhB,KAAKC,UAAUS,KACjCO,QAAiBf,YAAgBlE,KAAKuE,YAAYvE,KAAKwE,eAAeQ,KAC5E,aAAaC,EAASzB,QAElB0B,GACJpF,SAASqF,GACP,IAAK,IAAIC,WAAkBN,IAAa,CACtC,IAAK,IAAIhD,KAAQsD,EAAU,CAEzB,MAAM5B,EAAOQ,KAAK9E,MAAM8E,KAAKC,UAAUmB,EAAStD,KAChDsD,EAAStD,GAAQsB,EAAKG,SAASC,GAAM6B,mBAEjCF,EAAWC,GAEnB,OAAOF,GAETI,MAAW,gBACKR,KAAapE,OAE7B6E,QAAa,SAC2B,WAAxBT,KAAapE,OAE7B8E,WAAgB,gBACAV,KAAapE,OAAS,GAGxC,OAAOwE,EAGTpF,qBACE,MAAM2F,EAAczF,KAAKoB,UACnBsE,EAAa1F,KAAKmB,SACxBnB,KAAKoB,aACLpB,KAAKmB,YACL,MAAM6D,EACF,YAAchF,KAAKgB,IAAM,gBACRgD,KAAKC,UAAUwB,GAAe,eAC/BzB,KAAKC,UAAUyB,GAC7BT,QAAiBf,YACTlE,KAAKuE,YAAYvE,KAAKwE,eAAeQ,KAC9CW,OAAQ,QACb,aAAaV,EAASzB,OAGxB1D,wCAAwCgC,GACtC,MAAMmD,QAAiBf,YACTlE,KAAKuE,YAAYvE,KAAKwE,wBAAwBxE,KAAKgB,YAAYc,KACxE6D,OAAQ,WACb,aAAaV,EAASzB,OAGxB1D,iDACE,MAAMmF,QAAiBf,YACTlE,KAAKuE,YAAYvE,KAAKwE,wBAAwBxE,KAAKgB,OAC5D2E,OAAQ,WACb,aAAaV,EAASzB,OAGxB1D,oBACE,MAAMmF,QAAiBf,YAAgBlE,KAAKuE,YAAYvE,KAAKwE,eAC7D,aAAaS,EAASzB,OAGxB1D,WACE,uBAAwBE,KAAKuE,YAAYvE,KAAKwE,UAAUxE,KAAKgB,eAIjE4E,OAAOC,QAAUzB"}