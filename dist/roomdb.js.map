{"version":3,"file":"roomdb.js","sources":["../src/semantics.js","../src/parser.js","../src/RoomDB.js"],"sourcesContent":[" class Term {\n   toRawValue () {\n     return this\n   }\n}\n\n class Val extends Term {\n   constructor (value) {\n     super()\n     this.value = value\n   }\n\n   match (that, env) {\n     return that instanceof Val && this.value === that.value\n        ? env\n        : null\n   }\n\n   toRawValue () {\n     return this.value\n   }\n\n   toString () {\n     return JSON.stringify(this.value)\n   }\n}\n\n class Blob extends Term {\n   constructor (value) {\n     super()\n     this.value = value\n   }\n\n   match (that, env) {\n     return that instanceof Blob && this.value === that.value\n        ? env\n        : null\n   }\n\n   toRawValue () {\n     return this.value\n   }\n\n   toString () {\n     return '@'\n   }\n}\n\n class Var extends Term {\n   constructor (name) {\n     super()\n     this.name = name\n   }\n\n   match (that, env) {\n     if (env[this.name] === undefined) {\n       env[this.name] = that\n       return env\n     } else {\n       return env[this.name].match(that, env)\n     }\n   }\n\n   toRawValue () {\n     throw new Error('vars should never show up in a solution!')\n   }\n\n   toString () {\n     return '$' + this.name\n   }\n}\n\n class Hole extends Term {\n   match (that, env) {\n     throw new Error('holes should never show up in a query pattern')\n   }\n\n   toRawValue () {\n     throw new Error('holes should never show up in a solution!')\n   }\n\n   toString () {\n     return '_'\n   }\n}\n\n class Id extends Term {\n   constructor (name) {\n     super()\n     this.name = name\n   }\n\n   match (that, env) {\n     return that instanceof Id && this.name === that.name\n        ? env\n        : null\n   }\n\n   toString () {\n     return '#' + this.name\n   }\n}\n\n class Word extends Term {\n   constructor (str) {\n     super()\n     this.str = str\n   }\n\n   match (that, env) {\n     return that instanceof Word && this.str === that.str\n        ? env\n        : null\n   }\n\n   toString () {\n     return this.str\n   }\n}\n\n class Fact {\n   constructor (terms) {\n     this.terms = terms\n   }\n\n   hasVars () {\n     return this.terms.some(term => term instanceof Var)\n   }\n\n   match (that, env) {\n     if (this.terms.length !== that.terms.length) {\n       return null\n     }\n     for (let idx = 0; idx < this.terms.length; idx++) {\n       const thisTerm = this.terms[idx]\n       const thatTerm = that.terms[idx]\n       if (!thisTerm.match(thatTerm, env)) {\n         return null\n       }\n     }\n     return env\n   }\n\n   toString () {\n     return this.terms.map(term => term.toString()).join('')\n   }\n\n   clone () {\n     return new Fact(this.terms.slice())\n   }\n}\n\n export { Fact, Word, Term, Blob, Val, Var, Hole, Id }\n","'use strict'\n\nimport { Fact, Val, Var, Hole, Id, Word } from './semantics.js'\n\nconst ohm = require('ohm-js')\n\nconst grammar = ohm.grammar(`\n  G {\n\n    factOrPattern\n      = term*\n\n    term\n      = keyword<\"true\">   -- true\n      | keyword<\"false\">  -- false\n      | keyword<\"null\">   -- null\n      | space+            -- spaces\n      | var\n      | hole\n      | identity\n      | number\n      | string\n      | word\n\n    keyword<k>\n      = k ~alnum\n\n    var\n      = \"$\" alnum*\n\n    hole\n      = \"_\"\n\n    identity\n      = \"#\" alnum*\n\n    number\n      = float (\"e\" float)?\n\n    float\n      = integer (\".\" digit+)?\n\n    integer\n      = (\"+\" | \"-\")? digit+\n\n    string\n      = \"\\\\\"\" (~\"\\\\\"\" ~\"\\\\n\" any)* \"\\\\\"\"\n\n    word\n      = (~special any)+\n\n    special\n      = var | hole | identity | number | space\n\n  }\n`)\n\nconst semantics = grammar\n  .createSemantics()\n  .addOperation('parse', {\n    factOrPattern (terms) {\n      return new Fact(terms.parse())\n    },\n    term_true (_) {\n      return new Val(true)\n    },\n    term_false (_) {\n      return new Val(false)\n    },\n    term_null (_) {\n      return new Val(null)\n    },\n    var (_, cs) {\n      return new Var(cs.sourceString)\n    },\n    hole (_) {\n      return new Hole()\n    },\n    identity (_, cs) {\n      return new Id(cs.sourceString)\n    },\n    number (_1, _2, _3) {\n      return new Val(parseFloat(this.sourceString))\n    },\n    string (_oq, cs, _cq) {\n      const chars = []\n      let idx = 0\n      cs = cs.parse()\n      while (idx < cs.length) {\n        let c = cs[idx++]\n        if (c === '\\\\' && idx < cs.length) {\n          c = cs[idx++]\n          switch (c) {\n            case 'n': c = '\\n'; break\n            case 't': c = '\\t'; break\n            default: idx--\n          }\n        }\n        chars.push(c)\n      }\n      return new Val(chars.join(''))\n    },\n    word (_) {\n      return new Word(this.sourceString)\n    },\n    term_spaces (_) {\n      return new Word(' ')\n    },\n    _terminal () {\n      return this.sourceString\n    }\n  })\n\nexport default function parse (str, rule) {\n  const match = grammar.match(str.trim(), rule)\n\n  if (match.failed()) throw new Error(`invalid ${rule}: ${str}`)\n\n  return semantics(match).parse()\n}\n","'use strict'\n\n// TODO: include \"world time\" in facts\n\n// TODO: think about support for wishes\n\n// TODO: consider space-insensitive matching for facts\n// (would need a canonical representation to use as keys for factMap)\n\n// TODO: think about \"primary keys\"\n\nimport parse from './parser.js'\nimport { Blob, Hole, Term, Val } from './semantics.js'\n\nexport default class RoomDB {\n  constructor () {\n    this._parseCache = new Map()\n    this._factMap = new Map()\n    this._nextClientId = 1\n    this._clientMap = new Map()\n    this.parse = parse\n  }\n\n  connect (id) {\n    if (id === null) id = this._newClientId()\n    if (this._clientMap.has(id)) {\n      throw new Error('there is already a client whose id is ' + id)\n    }\n    const client = new Client(id, this)\n    this._clientMap.set(id, client)\n    return client\n  }\n\n  _newClientId () {\n    return '_' + this._nextClientId++\n  }\n\n  _select (...patterns) {\n    patterns = patterns.map(pattern =>\n        pattern instanceof Array\n            ? this._makeFactOrPattern(...pattern)\n            : this._makeFactOrPattern(pattern))\n    const solutions = []\n    this._collectSolutions(patterns, Object.create(null), solutions)\n    return {\n      do (callbackFn) {\n        for (let solution of solutions) {\n          for (let name in solution) {\n            solution[name] = solution[name].toRawValue()\n          }\n          callbackFn(solution)\n        }\n      },\n      doAll (callbackFn) {\n        let cleanSolutions = []\n        this.do(solution => cleanSolutions.push(solution))\n        callbackFn(cleanSolutions)\n      },\n      count () {\n        return solutions.length\n      },\n      isEmpty () {\n        return solutions.length === 0\n      },\n      isNotEmpty () {\n        return solutions.length > 0\n      }\n    }\n  }\n\n  _collectSolutions (patterns, env, solutions) {\n    if (patterns.length === 0) {\n      solutions.push(env)\n    } else {\n      const pattern = patterns[0]\n      for (let fact of this.facts) {\n        const newEnv = Object.create(env)\n        if (pattern.match(fact, newEnv)) {\n          this._collectSolutions(patterns.slice(1), newEnv, solutions)\n        }\n      }\n    }\n  }\n\n  _assert (asserterClientId, factString, ...fillerValues) {\n    const fact = this._makeFactOrPattern(factString, ...fillerValues)\n    fact.asserter = asserterClientId\n    if (fact.hasVars()) {\n      throw new Error('cannot assert a fact that has vars!')\n    }\n    fact.evidence = []\n    this._factMap.set(fact.toString(), fact)\n    return {\n      withEvidence: (...evidence) => {\n        evidence = evidence.map(e => this._makeFactOrPattern(e))\n        const evidenceWithVars = evidence.filter(e => e.hasVars())\n        if (evidenceWithVars.length > 0) {\n          console.error('the following evidence has vars:')\n          evidenceWithVars.forEach(e => console.info(e.toString()))\n          throw new Error('evidence facts cannot have vars!')\n        }\n        const falseEvidence = evidence.filter(e => !this._factMap.has(e.toString()))\n        if (falseEvidence.length > 0) {\n          console.error('the following evidence is not in the database:')\n          falseEvidence.forEach(e => console.info(e.toString()))\n          throw new Error('evidence facts must be in the database!')\n        }\n        fact.evidence = evidence\n      }\n    }\n  }\n\n  _retract (factString, ...fillerValues) {\n    const factOrPattern = this._makeFactOrPattern(factString, ...fillerValues)\n    if (factOrPattern.hasVars()) {\n      const factsToRetract = []\n      for (let fact of this.facts) {\n        if (factOrPattern.match(fact, Object.create(null))) {\n          factsToRetract.push(fact)\n        }\n      }\n      for (let fact of factsToRetract) {\n        this._factMap.delete(fact.toString())\n      }\n      return factsToRetract.length\n    } else {\n      return this._factMap.delete(factOrPattern.toString()) ? 1 : 0\n    }\n  }\n\n  _retractEverythingAbout (idString) {\n    const id = this.parse(idString, 'identity')\n    const factsToRetract = []\n    const emptyEnv = Object.create(null)\n    for (let fact of this.facts) {\n      if (fact.terms.some(term => id.match(term, emptyEnv))) {\n        factsToRetract.push(fact)\n      }\n    }\n    for (let fact of factsToRetract) {\n      this._factMap.delete(fact.toString())\n    }\n    return factsToRetract.length\n  }\n\n  _retractEverythingAssertedBy (clientId) {\n    const factsToRetract = this.facts.filter(fact => fact.asserter === clientId)\n    for (let fact of factsToRetract) {\n      this._factMap.delete(fact.toString())\n    }\n    return factsToRetract.length\n  }\n\n  _makeFactOrPattern (factString, ...fillerValues) {\n    if (arguments.length === 0) {\n      throw new Error('_makeFactOrPattern requires at least one argument!')\n    }\n    if (typeof factString !== 'string') {\n      throw new Error('factString must be a string!')\n    }\n    const fact = this.parse(factString)\n    for (let idx = 0; idx < fact.terms.length; idx++) {\n      const term = fact.terms[idx]\n      if (term instanceof Hole) {\n        if (fillerValues.length === 0) {\n          throw new Error('not enough filler values!')\n        }\n        fact.terms[idx] = this.toTerm(fillerValues.shift())\n      }\n    }\n    if (fillerValues.length > 0) {\n      throw new Error('too many filler values!')\n    }\n    return fact\n  }\n\n  parse (str, rule = 'factOrPattern') {\n    if (rule !== 'factOrPattern') {\n      return RoomDB.parse(str, rule)\n    }\n    let thing\n    if (this._parseCache.has(str)) {\n      thing = this._parseCache.get(str)\n    } else {\n      thing = RoomDB.parse(str, rule)\n      this._parseCache.set(str, thing)\n    }\n    return thing.clone()\n  }\n\n  clearParseCache () {\n    this._parseCache.clear()\n  }\n\n  toTerm (x) {\n    if (x instanceof Term) {\n      return x\n    } else if (typeof x === 'boolean' ||\n               typeof x === 'string' ||\n               typeof x === 'number') {\n      return new Val(x)\n    } else {\n      return new Blob(x)\n    }\n  }\n\n  get facts () {\n    return Array.from(this._factMap.values())\n  }\n\n  toString () {\n    return this.facts.map(fact => fact.toString()).join('\\n')\n  }\n}\n\nclass Client {\n  constructor (id, db) {\n    this._id = id\n    this._db = db\n  }\n\n  select (...patterns) {\n    return this._db._select(...patterns)\n  }\n\n  assert (factString, ...fillerValues) {\n    return this._db._assert(this._id, factString, ...fillerValues)\n  }\n\n  retract (factString, ...fillerNames) {\n    return this._db._retract(factString, ...fillerNames)\n  }\n\n  retractEverythingAbout (idString) {\n    return this._db._retractEverythingAbout(idString)\n  }\n\n  retractEverythingAssertedByMe () {\n    return this._db._retractEverythingAssertedBy(this._id)\n  }\n\n  get facts () {\n    return this._db.facts\n  }\n\n  get id () {\n    return this._id\n  }\n\n  disconnect () {\n    this._db._clientMap.delete(this._id)\n    this._db = null  // to disable this client\n  }\n\n  toString () {\n    return `[client ${this._id}]`\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAC,MAAM,IAAI,CAAC;GACT,UAAU,CAAC,GAAG;KACZ,OAAO,IAAI;IACZ;CACH;;CAEA,MAAM,GAAG,SAAS,IAAI,CAAC;GACrB,WAAW,CAAC,CAAC,KAAK,EAAE;KAClB,KAAK,GAAE;KACP,IAAI,CAAC,KAAK,GAAG,MAAK;IACnB;;GAED,KAAK,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE;KAChB,OAAO,IAAI,YAAY,GAAG,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK;UAClD,GAAG;UACH,IAAI;IACV;;GAED,UAAU,CAAC,GAAG;KACZ,OAAO,IAAI,CAAC,KAAK;IAClB;;GAED,QAAQ,CAAC,GAAG;KACV,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;IAClC;CACH;;CAEA,MAAM,IAAI,SAAS,IAAI,CAAC;GACtB,WAAW,CAAC,CAAC,KAAK,EAAE;KAClB,KAAK,GAAE;KACP,IAAI,CAAC,KAAK,GAAG,MAAK;IACnB;;GAED,KAAK,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE;KAChB,OAAO,IAAI,YAAY,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK;UACnD,GAAG;UACH,IAAI;IACV;;GAED,UAAU,CAAC,GAAG;KACZ,OAAO,IAAI,CAAC,KAAK;IAClB;;GAED,QAAQ,CAAC,GAAG;KACV,OAAO,GAAG;IACX;CACH;;CAEA,MAAM,GAAG,SAAS,IAAI,CAAC;GACrB,WAAW,CAAC,CAAC,IAAI,EAAE;KACjB,KAAK,GAAE;KACP,IAAI,CAAC,IAAI,GAAG,KAAI;IACjB;;GAED,KAAK,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE;KAChB,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;OAChC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAI;OACrB,OAAO,GAAG;MACX,MAAM;OACL,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC;MACvC;IACF;;GAED,UAAU,CAAC,GAAG;KACZ,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC;IAC5D;;GAED,QAAQ,CAAC,GAAG;KACV,OAAO,GAAG,GAAG,IAAI,CAAC,IAAI;IACvB;CACH;;CAEA,MAAM,IAAI,SAAS,IAAI,CAAC;GACtB,KAAK,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE;KAChB,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC;IACjE;;GAED,UAAU,CAAC,GAAG;KACZ,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC;IAC7D;;GAED,QAAQ,CAAC,GAAG;KACV,OAAO,GAAG;IACX;CACH;;CAEA,MAAM,EAAE,SAAS,IAAI,CAAC;GACpB,WAAW,CAAC,CAAC,IAAI,EAAE;KACjB,KAAK,GAAE;KACP,IAAI,CAAC,IAAI,GAAG,KAAI;IACjB;;GAED,KAAK,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE;KAChB,OAAO,IAAI,YAAY,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;UAC/C,GAAG;UACH,IAAI;IACV;;GAED,QAAQ,CAAC,GAAG;KACV,OAAO,GAAG,GAAG,IAAI,CAAC,IAAI;IACvB;CACH;;CAEA,MAAM,IAAI,SAAS,IAAI,CAAC;GACtB,WAAW,CAAC,CAAC,GAAG,EAAE;KAChB,KAAK,GAAE;KACP,IAAI,CAAC,GAAG,GAAG,IAAG;IACf;;GAED,KAAK,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE;KAChB,OAAO,IAAI,YAAY,IAAI,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG;UAC/C,GAAG;UACH,IAAI;IACV;;GAED,QAAQ,CAAC,GAAG;KACV,OAAO,IAAI,CAAC,GAAG;IAChB;CACH;;CAEA,MAAM,IAAI,CAAC;GACT,WAAW,CAAC,CAAC,KAAK,EAAE;KAClB,IAAI,CAAC,KAAK,GAAG,MAAK;IACnB;;GAED,OAAO,CAAC,GAAG;KACT,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,YAAY,GAAG,CAAC;IACpD;;GAED,KAAK,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE;KAChB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;OAC3C,OAAO,IAAI;MACZ;KACD,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;OAChD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAC;OAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAC;OAChC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE;SAClC,OAAO,IAAI;QACZ;MACF;KACD,OAAO,GAAG;IACX;;GAED,QAAQ,CAAC,GAAG;KACV,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;IACxD;;GAED,KAAK,CAAC,GAAG;KACP,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACpC;CACH;;AClJD,MAAM,GAAG,GAAG,OAAO,CAAC,QAAQ,EAAC;;AAE7B,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiD7B,CAAC,EAAC;;AAEF,MAAM,SAAS,GAAG,OAAO;GACtB,eAAe,EAAE;GACjB,YAAY,CAAC,OAAO,EAAE;IACrB,aAAa,CAAC,CAAC,KAAK,EAAE;MACpB,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;KAC/B;IACD,SAAS,CAAC,CAAC,CAAC,EAAE;MACZ,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC;KACrB;IACD,UAAU,CAAC,CAAC,CAAC,EAAE;MACb,OAAO,IAAI,GAAG,CAAC,KAAK,CAAC;KACtB;IACD,SAAS,CAAC,CAAC,CAAC,EAAE;MACZ,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC;KACrB;IACD,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE;MACV,OAAO,IAAI,GAAG,CAAC,EAAE,CAAC,YAAY,CAAC;KAChC;IACD,IAAI,CAAC,CAAC,CAAC,EAAE;MACP,OAAO,IAAI,IAAI,EAAE;KAClB;IACD,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE;MACf,OAAO,IAAI,EAAE,CAAC,EAAE,CAAC,YAAY,CAAC;KAC/B;IACD,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;MAClB,OAAO,IAAI,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC9C;IACD,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE;MACpB,MAAM,KAAK,GAAG,GAAE;MAChB,IAAI,GAAG,GAAG,EAAC;MACX,EAAE,GAAG,EAAE,CAAC,KAAK,GAAE;MACf,OAAO,GAAG,GAAG,EAAE,CAAC,MAAM,EAAE;QACtB,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,EAAC;QACjB,IAAI,CAAC,KAAK,IAAI,IAAI,GAAG,GAAG,EAAE,CAAC,MAAM,EAAE;UACjC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,EAAC;UACb,QAAQ,CAAC;YACP,KAAK,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,KAAK;YACzB,KAAK,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,KAAK;YACzB,SAAS,GAAG,GAAE;WACf;SACF;QACD,KAAK,CAAC,IAAI,CAAC,CAAC,EAAC;OACd;MACD,OAAO,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC/B;IACD,IAAI,CAAC,CAAC,CAAC,EAAE;MACP,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;KACnC;IACD,WAAW,CAAC,CAAC,CAAC,EAAE;MACd,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC;KACrB;IACD,SAAS,CAAC,GAAG;MACX,OAAO,IAAI,CAAC,YAAY;KACzB;GACF,EAAC;;AAEJ,AAAe,SAAS,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE;EACxC,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,IAAI,EAAC;;EAE7C,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE,MAAM,IAAI,KAAK,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;;EAE9D,OAAO,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE;CAChC;;ACrHD;;;;;;;;;AASA,AAGe,MAAM,MAAM,CAAC;EAC1B,WAAW,CAAC,GAAG;IACb,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,GAAE;IAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,GAAE;IACzB,IAAI,CAAC,aAAa,GAAG,EAAC;IACtB,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,GAAE;IAC3B,IAAI,CAAC,KAAK,GAAG,MAAK;GACnB;;EAED,OAAO,CAAC,CAAC,EAAE,EAAE;IACX,IAAI,EAAE,KAAK,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,YAAY,GAAE;IACzC,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;MAC3B,MAAM,IAAI,KAAK,CAAC,wCAAwC,GAAG,EAAE,CAAC;KAC/D;IACD,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,EAAE,EAAE,IAAI,EAAC;IACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,EAAC;IAC/B,OAAO,MAAM;GACd;;EAED,YAAY,CAAC,GAAG;IACd,OAAO,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE;GAClC;;EAED,OAAO,CAAC,CAAC,GAAG,QAAQ,EAAE;IACpB,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,OAAO;QAC3B,OAAO,YAAY,KAAK;cAClB,IAAI,CAAC,kBAAkB,CAAC,GAAG,OAAO,CAAC;cACnC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,EAAC;IAC3C,MAAM,SAAS,GAAG,GAAE;IACpB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,SAAS,EAAC;IAChE,OAAO;MACL,EAAE,CAAC,CAAC,UAAU,EAAE;QACd,KAAK,IAAI,QAAQ,IAAI,SAAS,EAAE;UAC9B,KAAK,IAAI,IAAI,IAAI,QAAQ,EAAE;YACzB,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAU,GAAE;WAC7C;UACD,UAAU,CAAC,QAAQ,EAAC;SACrB;OACF;MACD,KAAK,CAAC,CAAC,UAAU,EAAE;QACjB,IAAI,cAAc,GAAG,GAAE;QACvB,IAAI,CAAC,EAAE,CAAC,QAAQ,IAAI,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;QAClD,UAAU,CAAC,cAAc,EAAC;OAC3B;MACD,KAAK,CAAC,GAAG;QACP,OAAO,SAAS,CAAC,MAAM;OACxB;MACD,OAAO,CAAC,GAAG;QACT,OAAO,SAAS,CAAC,MAAM,KAAK,CAAC;OAC9B;MACD,UAAU,CAAC,GAAG;QACZ,OAAO,SAAS,CAAC,MAAM,GAAG,CAAC;OAC5B;KACF;GACF;;EAED,iBAAiB,CAAC,CAAC,QAAQ,EAAE,GAAG,EAAE,SAAS,EAAE;IAC3C,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;MACzB,SAAS,CAAC,IAAI,CAAC,GAAG,EAAC;KACpB,MAAM;MACL,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,EAAC;MAC3B,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;QAC3B,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,EAAC;QACjC,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE;UAC/B,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,SAAS,EAAC;SAC7D;OACF;KACF;GACF;;EAED,OAAO,CAAC,CAAC,gBAAgB,EAAE,UAAU,EAAE,GAAG,YAAY,EAAE;IACtD,MAAM,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,GAAG,YAAY,EAAC;IACjE,IAAI,CAAC,QAAQ,GAAG,iBAAgB;IAChC,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;MAClB,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;KACvD;IACD,IAAI,CAAC,QAAQ,GAAG,GAAE;IAClB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAC;IACxC,OAAO;MACL,YAAY,EAAE,CAAC,GAAG,QAAQ,KAAK;QAC7B,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAC;QACxD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAC;QAC1D,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;UAC/B,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAC;UACjD,gBAAgB,CAAC,OAAO,CAAC,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAC;UACzD,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC;SACpD;QACD,MAAM,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAC;QAC5E,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;UAC5B,OAAO,CAAC,KAAK,CAAC,gDAAgD,EAAC;UAC/D,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAC;UACtD,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC;SAC3D;QACD,IAAI,CAAC,QAAQ,GAAG,SAAQ;OACzB;KACF;GACF;;EAED,QAAQ,CAAC,CAAC,UAAU,EAAE,GAAG,YAAY,EAAE;IACrC,MAAM,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,GAAG,YAAY,EAAC;IAC1E,IAAI,aAAa,CAAC,OAAO,EAAE,EAAE;MAC3B,MAAM,cAAc,GAAG,GAAE;MACzB,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;QAC3B,IAAI,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;UAClD,cAAc,CAAC,IAAI,CAAC,IAAI,EAAC;SAC1B;OACF;MACD,KAAK,IAAI,IAAI,IAAI,cAAc,EAAE;QAC/B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAC;OACtC;MACD,OAAO,cAAc,CAAC,MAAM;KAC7B,MAAM;MACL,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;KAC9D;GACF;;EAED,uBAAuB,CAAC,CAAC,QAAQ,EAAE;IACjC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAU,EAAC;IAC3C,MAAM,cAAc,GAAG,GAAE;IACzB,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAC;IACpC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;MAC3B,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,EAAE;QACrD,cAAc,CAAC,IAAI,CAAC,IAAI,EAAC;OAC1B;KACF;IACD,KAAK,IAAI,IAAI,IAAI,cAAc,EAAE;MAC/B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAC;KACtC;IACD,OAAO,cAAc,CAAC,MAAM;GAC7B;;EAED,4BAA4B,CAAC,CAAC,QAAQ,EAAE;IACtC,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAC;IAC5E,KAAK,IAAI,IAAI,IAAI,cAAc,EAAE;MAC/B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAC;KACtC;IACD,OAAO,cAAc,CAAC,MAAM;GAC7B;;EAED,kBAAkB,CAAC,CAAC,UAAU,EAAE,GAAG,YAAY,EAAE;IAC/C,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;MAC1B,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC;KACtE;IACD,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;MAClC,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC;KAChD;IACD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAAC;IACnC,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;MAChD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAC;MAC5B,IAAI,IAAI,YAAY,IAAI,EAAE;QACxB,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;UAC7B,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC;SAC7C;QACD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,EAAC;OACpD;KACF;IACD,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;MAC3B,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC;KAC3C;IACD,OAAO,IAAI;GACZ;;EAED,KAAK,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,eAAe,EAAE;IAClC,IAAI,IAAI,KAAK,eAAe,EAAE;MAC5B,OAAO,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC;KAC/B;IACD,IAAI,MAAK;IACT,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;MAC7B,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAC;KAClC,MAAM;MACL,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,EAAC;MAC/B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAC;KACjC;IACD,OAAO,KAAK,CAAC,KAAK,EAAE;GACrB;;EAED,eAAe,CAAC,GAAG;IACjB,IAAI,CAAC,WAAW,CAAC,KAAK,GAAE;GACzB;;EAED,MAAM,CAAC,CAAC,CAAC,EAAE;IACT,IAAI,CAAC,YAAY,IAAI,EAAE;MACrB,OAAO,CAAC;KACT,MAAM,IAAI,OAAO,CAAC,KAAK,SAAS;eACtB,OAAO,CAAC,KAAK,QAAQ;eACrB,OAAO,CAAC,KAAK,QAAQ,EAAE;MAChC,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC;KAClB,MAAM;MACL,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;KACnB;GACF;;EAED,IAAI,KAAK,CAAC,GAAG;IACX,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;GAC1C;;EAED,QAAQ,CAAC,GAAG;IACV,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;GAC1D;CACF;;AAED,MAAM,MAAM,CAAC;EACX,WAAW,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;IACnB,IAAI,CAAC,GAAG,GAAG,GAAE;IACb,IAAI,CAAC,GAAG,GAAG,GAAE;GACd;;EAED,MAAM,CAAC,CAAC,GAAG,QAAQ,EAAE;IACnB,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,QAAQ,CAAC;GACrC;;EAED,MAAM,CAAC,CAAC,UAAU,EAAE,GAAG,YAAY,EAAE;IACnC,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,EAAE,GAAG,YAAY,CAAC;GAC/D;;EAED,OAAO,CAAC,CAAC,UAAU,EAAE,GAAG,WAAW,EAAE;IACnC,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,GAAG,WAAW,CAAC;GACrD;;EAED,sBAAsB,CAAC,CAAC,QAAQ,EAAE;IAChC,OAAO,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,QAAQ,CAAC;GAClD;;EAED,6BAA6B,CAAC,GAAG;IAC/B,OAAO,IAAI,CAAC,GAAG,CAAC,4BAA4B,CAAC,IAAI,CAAC,GAAG,CAAC;GACvD;;EAED,IAAI,KAAK,CAAC,GAAG;IACX,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK;GACtB;;EAED,IAAI,EAAE,CAAC,GAAG;IACR,OAAO,IAAI,CAAC,GAAG;GAChB;;EAED,UAAU,CAAC,GAAG;IACZ,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAC;IACpC,IAAI,CAAC,GAAG,GAAG,KAAI;GAChB;;EAED,QAAQ,CAAC,GAAG;IACV,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;GAC9B;CACF;;;;;;;;"}